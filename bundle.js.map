{"version":3,"file":"bundle.js","sources":["js/utils/el.js","js/utils/animate.js","js/utils/getRandomQuote.js","js/utils/changeQuote.js","js/app.js"],"sourcesContent":["export default (e) => document.querySelector(e);\r\n","export default (options) => {\r\n  return new Promise((resolve, reject) => {\r\n    let before;\r\n    let after;\r\n    let startTime;\r\n    let stepSize;\r\n    let operation;\r\n\r\n    const {\r\n      elements, // DOM node to perform the animation on\r\n      duration, // how long the animation should last\r\n      property, // css property you want to change (opacity, height, width, etc.)\r\n      startValue,\r\n      endValue,\r\n      units, // units (px, rem, %, etc.)\r\n      transform, //when doing a transform specify what operation you are doing (rotate, translate, etc.)\r\n      condition // executes on every change passing an object with keys 'elapsed' being the amount of time in ms the animation has been running for, and 'value' being the current value of the css property\r\n    } = options;\r\n\r\n    if (property === 'transform') {\r\n      before = `${transform}(`;\r\n      after = `${units})`;\r\n    } else {\r\n      before = '';\r\n      after = units ? units : '';\r\n    }\r\n\r\n    if (startValue - endValue < 0) {\r\n      stepSize = (endValue - startValue) / duration;\r\n      operation = 'min';\r\n    } else {\r\n      stepSize = (startValue - endValue) / duration;\r\n      operation = 'max';\r\n    }\r\n\r\n    function step(timestamp) {\r\n      // only set the start time if there is no start time (will only run once)\r\n      if (startTime === undefined) startTime = timestamp;\r\n\r\n      const elapsed = timestamp - startTime;\r\n\r\n      // calculate the angle\r\n      const value = Math[operation](operation === 'min' ? stepSize * elapsed : stepSize * (duration - elapsed), endValue);\r\n\r\n      elements.forEach(element => {\r\n        element.style[property] = before + value + after;\r\n      });\r\n\r\n      if (condition) condition({\r\n        value: value,\r\n        elapsed: elapsed\r\n      });\r\n\r\n      if (elapsed < duration) {\r\n        // call this again if the animation isn't done\r\n        window.requestAnimationFrame(step);\r\n      } else {\r\n        // reset the transform property once the animation completes and resolve the promise\r\n        resolve(true);\r\n      }\r\n    }\r\n\r\n    window.requestAnimationFrame(step);\r\n  });\r\n};\r\n","let quotes;\r\n\r\n// fetches and stores api data in quotes if it's not already saved, and then returns a random quote\r\nexport default async () => {\r\n  if (!quotes) {\r\n    const res = await fetch(\"https://type.fit/api/quotes\");\r\n    const data = await res.json();\r\n    quotes = data;\r\n  }\r\n\r\n  return quotes[Math.floor(Math.random() * quotes.length)];\r\n};","import animate from './animate';\r\nimport el from './el';\r\nimport getRandomQuote from './getRandomQuote';\r\n\r\nexport default () => {\r\n  animate({\r\n    elements: [el('.quote_content'), el('.quote_author')],\r\n    duration: 250,\r\n    property: 'opacity',\r\n    transform: '',\r\n    startValue: 1,\r\n    endValue: 0,\r\n    units: ''\r\n  })\r\n    .then(() => {\r\n      return getRandomQuote();\r\n    })\r\n    .then(quote => {\r\n      el('.quote_content').textContent = quote.text;\r\n      el('.quote_author').textContent = quote.author;\r\n      return animate({\r\n        elements: [el('.quote_content'), el('.quote_author')],\r\n        duration: 250,\r\n        property: 'opacity',\r\n        transform: '',\r\n        startValue: 0,\r\n        endValue: 1,\r\n        units: ''\r\n      });\r\n    });\r\n};","import el from './utils/el';\r\nimport animate from './utils/animate';\r\nimport changeQuote from './utils/changeQuote';\r\n\r\nchangeQuote();\r\n\r\nel('.quote_new-btn').addEventListener('click', () => {\r\n  animate({\r\n    elements: [el('.quote_new-btn')],\r\n    duration: 500,\r\n    property: 'transform',\r\n    transform: 'rotate',\r\n    startValue: 0,\r\n    endValue: 360,\r\n    units: 'deg'\r\n  });\r\n\r\n  changeQuote();\r\n});\r\n"],"names":[],"mappings":"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"}